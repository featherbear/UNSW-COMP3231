<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>COMP3231 Musings</title><link>/</link><description>Recent content on COMP3231 Musings</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Andrew Wong (z5206677)</copyright><lastBuildDate>Thu, 30 Apr 2020 22:11:31 +1000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>Multiprocessor Systems</title><link>/post/multiprocessor-systems/</link><pubDate>Thu, 30 Apr 2020 22:11:31 +1000</pubDate><guid>/post/multiprocessor-systems/</guid><description>The faster you go, the harder it is to accelerate (without heaps of effort)</description></item><item><title>TLB - Translation Lookaside Buffer</title><link>/post/translation-lookaside-buffer/</link><pubDate>Thu, 30 Apr 2020 18:32:48 +1000</pubDate><guid>/post/translation-lookaside-buffer/</guid><description>The TLB is a hardware cache of the page table entries.</description></item><item><title>Assignment 3</title><link>/post/assignment-3/</link><pubDate>Wed, 15 Apr 2020 16:48:20 +1000</pubDate><guid>/post/assignment-3/</guid><description>Diagram In this assignment you will implement the virtual memory sub-system of OS/161.</description></item><item><title>Virtual Memory</title><link>/post/virtual-memory/</link><pubDate>Thu, 09 Apr 2020 18:13:39 +1000</pubDate><guid>/post/virtual-memory/</guid><description>The Memory Management Unit Hardware device that translates virtual addresses into physical addresses.</description></item><item><title>Memory Management</title><link>/post/memory-management/</link><pubDate>Fri, 03 Apr 2020 18:22:44 +1100</pubDate><guid>/post/memory-management/</guid><description>Memory is a resource that needs to be managed.</description></item><item><title>Approaching assignment 2</title><link>/post/assignment-2/</link><pubDate>Fri, 03 Apr 2020 18:19:39 +1100</pubDate><guid>/post/assignment-2/</guid><description>Check out this page for useful stuff and references: Assignment 2 - Useful Things To Know</description></item><item><title>A look at the ext2 filesystem</title><link>/post/ext2-fs/</link><pubDate>Wed, 25 Mar 2020 16:31:39 +1100</pubDate><guid>/post/ext2-fs/</guid><description> inode structure Mode Type - file or directory Access Mode - rwxrwxrwx UID - User ID GID - Group ID atime - last access time ctime - creation time mtime - last modified time size - offset of the highest byte written block count - number of blocks used / allocated</description></item><item><title>Buffers and Caches</title><link>/post/buffers-and-caches/</link><pubDate>Wed, 25 Mar 2020 16:14:53 +1100</pubDate><guid>/post/buffers-and-caches/</guid><description>Buffers A buffer is a temporary storage used when transferring data between two entities.</description></item><item><title>Virtual File System</title><link>/post/virtual-file-system/</link><pubDate>Wed, 25 Mar 2020 15:22:41 +1100</pubDate><guid>/post/virtual-file-system/</guid><description>The virtual filesystem provides a framework that separates file-system independent and file-system dependent code.</description></item><item><title>File Systems</title><link>/post/file-systems/</link><pubDate>Tue, 24 Mar 2020 22:35:44 +1100</pubDate><guid>/post/file-systems/</guid><description>File-system abstractions give us many features and accessibility features</description></item><item><title>Memory</title><link>/post/memory/</link><pubDate>Tue, 24 Mar 2020 19:51:05 +1100</pubDate><guid>/post/memory/</guid><description>Principle of Locality - Things closer to each other are faster.</description></item><item><title>Context Switching</title><link>/post/context-switching/</link><pubDate>Tue, 24 Mar 2020 18:46:22 +1100</pubDate><guid>/post/context-switching/</guid><description>A context switch is the event which happens when the CPU changes from one thread/process to another thread/process.</description></item><item><title>Assignment 2 - Useful Things To Know</title><link>/post/assignment-2-useful/</link><pubDate>Tue, 24 Mar 2020 14:15:27 +1100</pubDate><guid>/post/assignment-2-useful/</guid><description>details:not([open]) summary::before { content: &#34;</description></item><item><title>Tutorial Week 4</title><link>/post/tut04/</link><pubDate>Mon, 09 Mar 2020 16:08:56 +1100</pubDate><guid>/post/tut04/</guid><description>What does the branch delay slot do?</description></item><item><title>Tutorial Week 3</title><link>/post/tut03/</link><pubDate>Thu, 05 Mar 2020 15:12:49 +1100</pubDate><guid>/post/tut03/</guid><description>A particular abstraction only allows a maximum of 10 threads to enter the &amp;ldquo;room&amp;rdquo; at any point in time.</description></item><item><title>System Calls</title><link>/post/system-calls/</link><pubDate>Thu, 05 Mar 2020 12:09:11 +1100</pubDate><guid>/post/system-calls/</guid><description>System calls are special function calls to access kernel functionality in a controlled and managed way.</description></item><item><title>Assignment 1 Questions</title><link>/post/assignment-1-questions/</link><pubDate>Tue, 03 Mar 2020 12:39:31 +1100</pubDate><guid>/post/assignment-1-questions/</guid><description>Thread Questions What happens to a thread when it exits (i.</description></item><item><title>Implementation of Processes and Threads</title><link>/post/implementation-of-processes-and-threads/</link><pubDate>Thu, 27 Feb 2020 13:38:26 +1100</pubDate><guid>/post/implementation-of-processes-and-threads/</guid><description>MIPS3000</description></item><item><title>Deadlock</title><link>/post/deadlock/</link><pubDate>Thu, 27 Feb 2020 12:12:37 +1100</pubDate><guid>/post/deadlock/</guid><description>// req -&amp;gt; block until available -&amp;gt; release resource</description></item><item><title>Tutorial Week 2</title><link>/post/tut02/</link><pubDate>Mon, 24 Feb 2020 16:09:20 +1100</pubDate><guid>/post/tut02/</guid><description>The Role of the Operating System Abstracts Hardware Provides a high level of access to the devices in the system</description></item><item><title>OS/161 Synchronisation Primitives</title><link>/post/os161-synchronisation-primitives/</link><pubDate>Mon, 24 Feb 2020 13:55:39 +1100</pubDate><guid>/post/os161-synchronisation-primitives/</guid><description>Locks struct lock *lock_create(const char *name); Name parameter for debug purposes!</description></item><item><title>Producer Consumer Problem</title><link>/post/producer-consumer-problem/</link><pubDate>Mon, 24 Feb 2020 13:12:18 +1100</pubDate><guid>/post/producer-consumer-problem/</guid><description>Producer produces data items and store the items in a buffer.</description></item><item><title>Concurrency and Synchronisation</title><link>/post/concurrency-and-synchronisation/</link><pubDate>Thu, 20 Feb 2020 12:39:56 +1100</pubDate><guid>/post/concurrency-and-synchronisation/</guid><description>The Issue Race conditions: Depending on the scheduling and timing of the function execution.</description></item><item><title>Thread Model</title><link>/post/thread-model/</link><pubDate>Thu, 20 Feb 2020 12:19:08 +1100</pubDate><guid>/post/thread-model/</guid><description>Asynchronous Model - Keep track of requests waiting to be fulfilled.</description></item><item><title>Assignment 0 Questions</title><link>/post/assignment-0-questions/</link><pubDate>Wed, 19 Feb 2020 23:08:53 +1100</pubDate><guid>/post/assignment-0-questions/</guid><description>Question 1: What is the vm system called that is configured for assignment 0?</description></item><item><title>Assignment 0</title><link>/post/assignment-0/</link><pubDate>Wed, 19 Feb 2020 22:51:30 +1100</pubDate><guid>/post/assignment-0/</guid><description>This assignment introduces us to the OS/161 environment: of how to compile the kernel, run the operating system, and to learn how to debug errors.</description></item><item><title>OS/161 - A First Glance</title><link>/post/os161/</link><pubDate>Wed, 19 Feb 2020 17:35:55 +1100</pubDate><guid>/post/os161/</guid><description>The OS/161 Kit OS/161 System/161 Development Tools OS/161 OS/161 is the kernel and software suite that is developed on for this course.</description></item><item><title>Processes and Threads</title><link>/post/processes-and-threads/</link><pubDate>Mon, 17 Feb 2020 13:46:49 +1100</pubDate><guid>/post/processes-and-threads/</guid><description>A processor can only run one thing at a time.</description></item><item><title>Introduction to OS</title><link>/post/introduction-to-os/</link><pubDate>Mon, 17 Feb 2020 13:09:51 +1100</pubDate><guid>/post/introduction-to-os/</guid><description>What is an Operating System An abstract machine Extends the basic hardware, with added functionality Hides details of the hardware Provides a high-level abstraction of the system to the developer (common framework) A resource nanager Allocates resources (CPU time, memory, etc) to users and processes (Depending on policy) Ensures no starvation occurs, and that progress is made The software running in privileged mode On microprocessors with levels of privileges (user mode / kernel mode), the OS runs in the higher privileged mode.</description></item><item><title/><link>/post/virtual-memory-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/post/virtual-memory-management/</guid><description>s&amp;mdash; title: &amp;ldquo;Virtual Memory Management&amp;rdquo; date: 2020-04-30T21:01:15+10:00</description></item></channel></rss>